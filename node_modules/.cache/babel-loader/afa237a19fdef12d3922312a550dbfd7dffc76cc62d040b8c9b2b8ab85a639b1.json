{"ast":null,"code":"var _jsxFileName = \"/Users/ethansmith/Desktop/COMP2002/team32_project/src/components/ringchart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colorPallete = ['#7D2B54', '#9E4B95', '#BF6C78', '#DACD82', '#97CAEB', '#61A89A', '#37753B', '#312383'];\nlet runningTotal = 0;\nconst RingChart = props => {\n  let dataAsPercentage = makeDataPercentage(props.data);\n  const paths = [];\n  Object.keys(dataAsPercentage).forEach((key, index) => paths.push( /*#__PURE__*/_jsxDEV(\"path\", {\n    d: getPath(dataAsPercentage[key]),\n    stroke: colorPallete[index],\n    fill: \"transparent\",\n    strokeWidth: \"0.5\"\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"ringChart\",\n      height: props.height,\n      width: props.width,\n      viewBox: \"-1.25 -1.25 2.5 2.5\",\n      children: paths\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = RingChart;\nfunction makeDataPercentage(data) {\n  const total = Object.values(data).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n  let temp = {};\n  Object.keys(data).forEach(key => {\n    temp[key] = data[key] / total;\n  });\n  return temp;\n}\nfunction getCoordinates(percent) {\n  let x = Math.cos(2 * Math.PI * percent);\n  let y = Math.sin(2 * Math.PI * percent);\n  return [x, y];\n}\nfunction getPath(dataAsPercentage) {\n  let [startX, startY] = getCoordinates(runningTotal);\n  runningTotal += dataAsPercentage;\n  let [endX, endY] = getCoordinates(runningTotal);\n  let greaterThan50 = dataAsPercentage > 50 ? 1 : 0;\n  let pathData = [\"M \" + startX + \" \" + startY, \"A 1 1 0 \" + greaterThan50 + \" 1 \" + endX + \" \" + endY].join(\" \");\n  return pathData;\n}\nexport default RingChart;\nvar _c;\n$RefreshReg$(_c, \"RingChart\");","map":{"version":3,"names":["colorPallete","runningTotal","RingChart","props","dataAsPercentage","makeDataPercentage","data","paths","Object","keys","forEach","key","index","push","getPath","height","width","total","values","reduce","accumulator","currentValue","temp","getCoordinates","percent","x","Math","cos","PI","y","sin","startX","startY","endX","endY","greaterThan50","pathData","join"],"sources":["/Users/ethansmith/Desktop/COMP2002/team32_project/src/components/ringchart.js"],"sourcesContent":["const colorPallete = ['#7D2B54', '#9E4B95', '#BF6C78', '#DACD82', '#97CAEB', '#61A89A', '#37753B', '#312383']\nlet runningTotal = 0;\n\nconst RingChart = (props) => {\n\n    let dataAsPercentage = makeDataPercentage(props.data);\n\n    const paths = [];\n\n    Object.keys(dataAsPercentage).forEach((key, index) => (\n        paths.push(\n            <path key={key} d={getPath(dataAsPercentage[key])} stroke={colorPallete[index]} fill=\"transparent\" strokeWidth=\"0.5\"></path>\n        )\n    ))\n\n    return (\n        <>\n            <svg className=\"ringChart\" height={props.height} width={props.width} viewBox=\"-1.25 -1.25 2.5 2.5\">\n                {paths}\n            </svg>\n        </>\n    );\n}\n\n\nfunction makeDataPercentage(data){\n\n    const total = Object.values(data).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    let temp = {};\n    Object.keys(data).forEach(key => {\n        temp[key] = (data[key] / total);\n    });\n    return temp;\n}\n\nfunction getCoordinates(percent) {\n    let x = Math.cos(2 * Math.PI * percent);\n    let y = Math.sin(2 * Math.PI * percent);\n    return [x, y];\n}\n\nfunction getPath(dataAsPercentage){\n    let [startX, startY] = getCoordinates(runningTotal);\n    runningTotal += dataAsPercentage;\n    let [endX, endY] = getCoordinates(runningTotal);\n\n    let greaterThan50 = (dataAsPercentage > 50) ? 1 : 0;\n\n    let pathData = [\n        \"M \" + startX + \" \" + startY,\n        \"A 1 1 0 \" + greaterThan50 + \" 1 \" + endX + \" \" + endY,\n    ].join(\" \");\n\n    return pathData;\n}\n\nexport default RingChart;"],"mappings":";;;AAAA,MAAMA,YAAY,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7G,IAAIC,YAAY,GAAG,CAAC;AAEpB,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAEzB,IAAIC,gBAAgB,GAAGC,kBAAkB,CAACF,KAAK,CAACG,IAAI,CAAC;EAErD,MAAMC,KAAK,GAAG,EAAE;EAEhBC,MAAM,CAACC,IAAI,CAACL,gBAAgB,CAAC,CAACM,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAC7CL,KAAK,CAACM,IAAI,eACN;IAAgB,CAAC,EAAEC,OAAO,CAACV,gBAAgB,CAACO,GAAG,CAAC,CAAE;IAAC,MAAM,EAAEX,YAAY,CAACY,KAAK,CAAE;IAAC,IAAI,EAAC,aAAa;IAAC,WAAW,EAAC;EAAK,GAAzGD,GAAG;IAAA;IAAA;IAAA;EAAA,QAA8G,CAEnI,CAAC;EAEF,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,WAAW;MAAC,MAAM,EAAER,KAAK,CAACY,MAAO;MAAC,KAAK,EAAEZ,KAAK,CAACa,KAAM;MAAC,OAAO,EAAC,qBAAqB;MAAA,UAC7FT;IAAK;MAAA;MAAA;MAAA;IAAA;EACJ,iBACP;AAEX,CAAC;AAAA,KAnBKL,SAAS;AAsBf,SAASG,kBAAkB,CAACC,IAAI,EAAC;EAE7B,MAAMW,KAAK,GAAGT,MAAM,CAACU,MAAM,CAACZ,IAAI,CAAC,CAACa,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAW,GAAGC,YAAY,EAAE,CAAC,CAAC;EACtG,IAAIC,IAAI,GAAG,CAAC,CAAC;EACbd,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;IAC7BW,IAAI,CAACX,GAAG,CAAC,GAAIL,IAAI,CAACK,GAAG,CAAC,GAAGM,KAAM;EACnC,CAAC,CAAC;EACF,OAAOK,IAAI;AACf;AAEA,SAASC,cAAc,CAACC,OAAO,EAAE;EAC7B,IAAIC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGD,IAAI,CAACE,EAAE,GAAGJ,OAAO,CAAC;EACvC,IAAIK,CAAC,GAAGH,IAAI,CAACI,GAAG,CAAC,CAAC,GAAGJ,IAAI,CAACE,EAAE,GAAGJ,OAAO,CAAC;EACvC,OAAO,CAACC,CAAC,EAAEI,CAAC,CAAC;AACjB;AAEA,SAASf,OAAO,CAACV,gBAAgB,EAAC;EAC9B,IAAI,CAAC2B,MAAM,EAAEC,MAAM,CAAC,GAAGT,cAAc,CAACtB,YAAY,CAAC;EACnDA,YAAY,IAAIG,gBAAgB;EAChC,IAAI,CAAC6B,IAAI,EAAEC,IAAI,CAAC,GAAGX,cAAc,CAACtB,YAAY,CAAC;EAE/C,IAAIkC,aAAa,GAAI/B,gBAAgB,GAAG,EAAE,GAAI,CAAC,GAAG,CAAC;EAEnD,IAAIgC,QAAQ,GAAG,CACX,IAAI,GAAGL,MAAM,GAAG,GAAG,GAAGC,MAAM,EAC5B,UAAU,GAAGG,aAAa,GAAG,KAAK,GAAGF,IAAI,GAAG,GAAG,GAAGC,IAAI,CACzD,CAACG,IAAI,CAAC,GAAG,CAAC;EAEX,OAAOD,QAAQ;AACnB;AAEA,eAAelC,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}